{
    "swagger": "2.0",
    "info": {
        "description": "Auth server API",
        "title": "Auth service",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/auth/change-password": {
            "post": {
                "description": "Updates authenticated user's password after validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Change Password"
                ],
                "summary": "Change user password",
                "parameters": [
                    {
                        "description": "New password details",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.Password"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.Response"
                        }
                    }
                }
            }
        },
        "/auth/check-token": {
            "get": {
                "description": "Verifying access, extract sub and returns Token status. Clears the Cookies, if there any error",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Verifying access Token",
                "responses": {
                    "200": {
                        "description": "Access Token is Valid",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Returns a message indicating the login endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login request body",
                        "name": "entity.User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully logged",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "get": {
                "description": "Verifying access, extract sub and returns Token status. Clears the Cookies, if there any error",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "Verifying refresh Token and returning Access",
                "responses": {
                    "200": {
                        "description": "Refresh Token is Valid",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        },
        "/auth/sign-up/admin": {
            "post": {
                "description": "Returns a message indicating the sign-up endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SignUp"
                ],
                "summary": "Sign up user",
                "parameters": [
                    {
                        "description": "Sign up request body",
                        "name": "entity.User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully registered",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        },
        "/auth/sign-up/user": {
            "post": {
                "description": "Returns a message indicating the sign-up endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "SignUp"
                ],
                "summary": "Sign up user",
                "parameters": [
                    {
                        "description": "Sign up request body",
                        "name": "entity.User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User successfully registered",
                        "schema": {
                            "$ref": "#/definitions/entity.UserResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Password": {
            "type": "object",
            "properties": {
                "new-password": {
                    "type": "string"
                }
            }
        },
        "entity.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "entity.Role": {
            "type": "string",
            "enum": [
                "user",
                "admin"
            ],
            "x-enum-varnames": [
                "UserRole",
                "AdminRole"
            ]
        },
        "entity.User": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "minLength": 1
                },
                "username": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "entity.UserResponse": {
            "type": "object",
            "properties": {
                "access-token": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "refresh-token": {
                    "type": "string"
                },
                "role": {
                    "$ref": "#/definitions/entity.Role"
                },
                "token-type": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}