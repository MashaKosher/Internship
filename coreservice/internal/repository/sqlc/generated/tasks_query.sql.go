// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: tasks_query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const addDailyTask = `-- name: AddDailyTask :exec
INSERT INTO daily_tasks (task_date, referals_amount, wins_amount)
VALUES ($1, $2, $3)
`

type AddDailyTaskParams struct {
	TaskDate       pgtype.Date
	ReferalsAmount pgtype.Int4
	WinsAmount     pgtype.Int4
}

func (q *Queries) AddDailyTask(ctx context.Context, arg AddDailyTaskParams) error {
	_, err := q.db.Exec(ctx, addDailyTask, arg.TaskDate, arg.ReferalsAmount, arg.WinsAmount)
	return err
}

const getDailyTask = `-- name: GetDailyTask :one
SELECT task_date, referals_amount, wins_amount FROM daily_tasks 
WHERE task_date = $1 LIMIT 1
`

func (q *Queries) GetDailyTask(ctx context.Context, taskDate pgtype.Date) (DailyTask, error) {
	row := q.db.QueryRow(ctx, getDailyTask, taskDate)
	var i DailyTask
	err := row.Scan(&i.TaskDate, &i.ReferalsAmount, &i.WinsAmount)
	return i, err
}
